{"version":3,"sources":["helpers/utils.js","LevelBar.js","ColorWheel.js","ColorPicker.js","index.js"],"names":["coordinatesToHS","x","y","h","Math","atan2","PI","s","min","sqrt","rgbToHex","r","g","b","componentToHex","c","hex","toString","toUpperCase","length","rgbToHsl","red","green","blue","max","l","d","parseFloat","toFixed","LevelBar","alignRight","className","handleClassName","size","background","onChange","value","bar","useRef","useState","editing","setEditing","useEffect","mouseDown","event","current","contains","target","mouseMove","yDifference","clientY","getBoundingClientRect","mouseUp","window","addEventListener","removeEventListener","indicatorPosition","useMemo","top","sin","asin","horizontal","cos","ref","style","position","height","width","transform","cursor","marginTop","id","clipPathUnits","left","border","defaultProps","ColorWheel","color","setColor","wheel","clientX","hue","saturation","onMouseDown","useCallback","currentTarget","role","tabIndex","margin","lightness","ColorPicker","initialColor","rgb","hsl","pickedColor","setPickedColor","test","result","exec","parseInt","hexToRGB","Number","isInteger","setColorFromWheel","undefined","abs","m","round","hslToRgb","backgroundColor","fontSize","App","windowSize","setWindowSize","reCalculate","innerHeight","innerWidth","display","justifyContent","alignItems","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe38ddf9.chunk.js","sourcesContent":["export const hsToCoordinates = (hue, saturation) => ({\r\n  x: (Math.cos((hue - 90) * (Math.PI / 180)) * (saturation / 100) + 1) / 2,\r\n  y: (1 - Math.sin((hue - 90) * (Math.PI / 180)) * (saturation / 100) * -1) / 2,\r\n});\r\n\r\nexport const coordinatesToHS = (x, y) => {\r\n  let h = Math.atan2(y * 2 - 1, x * 2 - 1) * (180 / Math.PI) + 90;\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n  const s = Math.min(100, Math.sqrt((1 - y * 2) ** 2 + (x * 2 - 1) ** 2) * 100);\r\n  return { h, s };\r\n};\r\n\r\nexport const hexToRGB = hex => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n  } : null;\r\n};\r\n\r\nexport const rgbToHex = (r, g, b) => {\r\n  const componentToHex = c => {\r\n    const hex = c.toString(16).toUpperCase();\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n  };\r\n  return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\r\n};\r\n\r\nexport const rgbToHsl = (r, g, b) => {\r\n  const red = r / 255;\r\n  const green = g / 255;\r\n  const blue = b / 255;\r\n  const max = Math.max(red, green, blue);\r\n  const min = Math.min(red, green, blue);\r\n  let h = 0;\r\n  let s = 0;\r\n  let l = (max + min) / 2;\r\n\r\n  if (max !== min) {\r\n    const d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    switch (max) {\r\n      case red: h = (green - blue) / d + (green < blue ? 6 : 0); break;\r\n      case green: h = (blue - red) / d + 2; break;\r\n      case blue: h = (red - green) / d + 4; break;\r\n      default:\r\n    }\r\n  }\r\n  h /= 6;\r\n\r\n  h *= 360;\r\n  s *= 100;\r\n  l *= 100;\r\n\r\n  return {\r\n    h: parseFloat(h.toFixed(2)),\r\n    s: parseFloat(s.toFixed(2)),\r\n    l: parseFloat(l.toFixed(2)),\r\n  };\r\n};\r\n\r\nexport const hslToRgb = (h, s, l) => {\r\n  const saturation = s / 100;\r\n  const lightness = l / 100;\r\n\r\n  const c = (1 - Math.abs(2 * lightness - 1)) * saturation;\r\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n  const m = lightness - c / 2;\r\n  let r = 0;\r\n  let g = 0;\r\n  let b = 0;\r\n\r\n  if (h >= 0 && h < 60) {\r\n    r = c; g = x; b = 0;\r\n  } else if (h >= 60 && h < 120) {\r\n    r = x; g = c; b = 0;\r\n  } else if (h >= 120 && h < 180) {\r\n    r = 0; g = c; b = x;\r\n  } else if (h >= 180 && h < 240) {\r\n    r = 0; g = x; b = c;\r\n  } else if (h >= 240 && h < 300) {\r\n    r = x; g = 0; b = c;\r\n  } else if (h >= 300 && h < 360) {\r\n    r = c; g = 0; b = x;\r\n  }\r\n  r = Math.abs(Math.round((r + m) * 255));\r\n  g = Math.abs(Math.round((g + m) * 255));\r\n  b = Math.abs(Math.round((b + m) * 255));\r\n\r\n  return { r, g, b };\r\n};\r\n","import React, {\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/LevelBar.css';\r\n\r\nconst LevelBar = ({\r\n  alignRight,\r\n  className,\r\n  handleClassName,\r\n  size,\r\n  background,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const bar = useRef(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const mouseDown = event => {\r\n      if (bar.current.contains(event.target)) {\r\n        setEditing(true);\r\n      }\r\n    };\r\n    const mouseMove = event => {\r\n      if (editing) {\r\n        // Y coordinate difference as [0,1] (0 is full saturation)\r\n        const yDifference = event.clientY - bar.current.getBoundingClientRect().y;\r\n        const s = (1 - Math.min(size, Math.max(0, yDifference)) / size) * 100;\r\n        onChange(parseFloat(s.toFixed(2)));\r\n      }\r\n    };\r\n    const mouseUp = () => setEditing(false);\r\n\r\n    window.addEventListener('mousedown', mouseDown);\r\n    window.addEventListener('mousemove', mouseMove);\r\n    window.addEventListener('mouseup', mouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousedown', mouseDown);\r\n      window.removeEventListener('mousemove', mouseMove);\r\n      window.removeEventListener('mouseup', mouseUp);\r\n    };\r\n  }, [editing, onChange, size]);\r\n\r\n  const indicatorPosition = useMemo(() => {\r\n    const top = size * (0.6 * (1 - Math.sin(Math.asin(3 / 4) * (value / 50 - 1))) - 1 / 10);\r\n    const horizontal = size * 0.65 * (1 - Math.cos(Math.asin(3 / 4) * (value / 50 - 1)));\r\n    return { top, horizontal };\r\n  }, [value, size]);\r\n\r\n  return (\r\n    <div\r\n      ref={bar}\r\n      className={className}\r\n      style={{\r\n        position: 'absolute',\r\n        height: size,\r\n        width: size * 0.281,\r\n        transform: alignRight ? 'scaleX(-1)' : '',\r\n        cursor: 'grab',\r\n      }}\r\n    >\r\n      <svg\r\n        className=\"barBackground\"\r\n        style={{\r\n          background,\r\n          marginTop: size / 20,\r\n        }}\r\n      >\r\n        <clipPath id=\"clipBar\" clipPathUnits=\"objectBoundingBox\">\r\n          <path\r\n            d=\"M0.796,1 C0.308,0.878,0,0.699,0,0.5 C0,0.301,0.308,0.122,0.796,0 H1 C0.504,0.122,0.19,0.303,0.19,0.504 C0.19,0.701,0.49,0.878,0.968,1 H0.796\"\r\n          />\r\n        </clipPath>\r\n      </svg>\r\n      <div\r\n        className={handleClassName}\r\n        style={{\r\n          top: indicatorPosition.top,\r\n          left: indicatorPosition.horizontal,\r\n          width: size * 0.05,\r\n          height: size * 0.05,\r\n          border: `${size * 0.005}px solid black`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nLevelBar.propTypes = {\r\n  /** Whether bar is aligned to right */\r\n  alignRight: PropTypes.bool,\r\n  /** Css class name for outer div */\r\n  className: PropTypes.string,\r\n  /** Css class name for handle */\r\n  handleClassName: PropTypes.string,\r\n  /** Background in css format */\r\n  background: PropTypes.string,\r\n  /** height of the bar */\r\n  size: PropTypes.number.isRequired,\r\n  /** zero saturation color string in css hsl format (hsl(0, 5%, 10%)). */\r\n  onChange: PropTypes.func,\r\n  /** current value level ([0,100]) */\r\n  value: PropTypes.number,\r\n};\r\n\r\nLevelBar.defaultProps = {\r\n  alignRight: false,\r\n  className: 'levelBar',\r\n  handleClassName: 'defaultHandle',\r\n  background: 'black',\r\n  onChange: (() => {}),\r\n  value: 100,\r\n};\r\nexport default LevelBar;\r\n","import React, {\r\n  useCallback, useEffect, useRef, useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/ColorWheel.css';\r\nimport { coordinatesToHS, hsToCoordinates } from './helpers/utils';\r\nimport LevelBar from './LevelBar';\r\n\r\nconst ColorWheel = ({\r\n  color,\r\n  size,\r\n  setColor,\r\n}) => {\r\n  const wheel = useRef(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const mouseDown = event => {\r\n      if (wheel.current.contains(event.target)) {\r\n        setEditing(true);\r\n      }\r\n    };\r\n    const mouseUp = () => {\r\n      setEditing(false);\r\n    };\r\n    const mouseMove = event => {\r\n      if (editing) {\r\n        setColor(\r\n          coordinatesToHS(\r\n            (event.clientX - wheel.current.getBoundingClientRect().x) / size,\r\n            (event.clientY - wheel.current.getBoundingClientRect().y) / size,\r\n          ),\r\n        );\r\n      }\r\n    };\r\n\r\n    window.addEventListener('mousemove', mouseMove);\r\n    window.addEventListener('mousedown', mouseDown);\r\n    window.addEventListener('mouseup', mouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousedown', mouseDown);\r\n      window.removeEventListener('mouseup', mouseUp);\r\n      window.removeEventListener('mousemove', mouseMove);\r\n    };\r\n  }, [editing, setColor, size]);\r\n\r\n  const { x, y } = hsToCoordinates(color.h, color.s);\r\n\r\n  const onMouseDown = useCallback(event => {\r\n    setColor(\r\n      coordinatesToHS(\r\n        (event.clientX - event.currentTarget.getBoundingClientRect().x) / size,\r\n        (event.clientY - event.currentTarget.getBoundingClientRect().y) / size,\r\n      ),\r\n    );\r\n  }, [setColor, size]);\r\n\r\n  return (\r\n    <div className=\"colorWheel\">\r\n      <LevelBar\r\n        className=\"saturationBar\"\r\n        size={size}\r\n        background={`linear-gradient(hsl(${color.h},100%,${color.l}%),hsl(${color.h},0%,${color.l}%))`}\r\n        onChange={saturation => setColor({ s: saturation })}\r\n        value={color.s}\r\n      />\r\n      <div\r\n        ref={wheel}\r\n        className=\"wheel\"\r\n        onMouseDown={onMouseDown}\r\n        role=\"button\"\r\n        tabIndex={-5}\r\n        style={{ margin: `0 ${size / 10}px` }}\r\n      >\r\n        <div\r\n          className=\"handle\"\r\n          style={{\r\n            top: y * size,\r\n            left: x * size,\r\n            width: size / 15,\r\n            height: size / 15,\r\n            border: `${size / 150}px solid black`,\r\n          }}\r\n        />\r\n      </div>\r\n      <LevelBar\r\n        alignRight\r\n        className=\"lightnessBar\"\r\n        size={size}\r\n        background={`linear-gradient(white,hsl(${color.h},${color.s}%,50%), black)`}\r\n        onChange={lightness => setColor({ l: lightness })}\r\n        value={color.l}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nColorWheel.propTypes = {\r\n  /** Current picked color */\r\n  color: PropTypes.shape({\r\n    h: PropTypes.number,\r\n    s: PropTypes.number,\r\n    l: PropTypes.number,\r\n  }),\r\n  /** Size of color wheel */\r\n  size: PropTypes.number.isRequired,\r\n  /** Callback function to set color */\r\n  setColor: PropTypes.func.isRequired,\r\n};\r\n\r\nColorWheel.defaultProps = {\r\n  color: {\r\n    h: 0,\r\n    s: 100,\r\n    l: 50,\r\n  },\r\n};\r\nexport default ColorWheel;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport './styles/ColorPicker.css';\r\nimport PropTypes from 'prop-types';\r\nimport ColorWheel from './ColorWheel';\r\nimport {\r\n  hexToRGB, hslToRgb, rgbToHex, rgbToHsl,\r\n} from './helpers/utils';\r\n\r\nconst ColorPicker = ({\r\n  size,\r\n  initialColor,\r\n  onChange,\r\n}) => {\r\n  const [pickedColor, setPickedColor] = useState({\r\n    hex: '#FF0000',\r\n    rgb: { r: 255, g: 0, b: 0 },\r\n    hsl: { h: 0, s: 100, l: 50 },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (/^#[0-9A-F]{6}$/i.test(initialColor)) {\r\n      const hex = initialColor.toUpperCase();\r\n      const rgb = hexToRGB(initialColor);\r\n      const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n      setPickedColor({ hex, rgb, hsl });\r\n    } else if (Number.isInteger(initialColor.r)\r\n      && Number.isInteger(initialColor.g)\r\n      && Number.isInteger(initialColor.b)) {\r\n      const hex = rgbToHex(initialColor.r, initialColor.g, initialColor.b);\r\n      const rgb = initialColor;\r\n      const hsl = rgbToHsl(initialColor.r, initialColor.g, initialColor.b);\r\n      setPickedColor({ hex, rgb, hsl });\r\n    } else {\r\n      setPickedColor({ hex: '#FF0000', rgb: { r: 255, g: 0, b: 0 }, hsl: { h: 0, s: 100, l: 50 } });\r\n    }\r\n  }, []);\r\n\r\n  const setColorFromWheel = useCallback(hsl => {\r\n    const h = parseFloat((hsl.h === undefined ? pickedColor.hsl.h : hsl.h).toFixed(2));\r\n    const s = parseFloat((hsl.s === undefined ? pickedColor.hsl.s : hsl.s).toFixed(2));\r\n    const l = parseFloat((hsl.l === undefined ? pickedColor.hsl.l : hsl.l).toFixed(2));\r\n    const rgb = hslToRgb(h, s, l);\r\n    const hex = rgbToHex(rgb.r, rgb.g, rgb.b);\r\n    setPickedColor({ hex, rgb, hsl: { h, s, l } });\r\n    onChange({ hex, rgb, hsl: { h, s, l } });\r\n  }, [onChange, pickedColor.hsl]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"outerContainer\"\r\n        style={{\r\n          height: size,\r\n          width: size,\r\n        }}\r\n      >\r\n        <ColorWheel\r\n          color={pickedColor.hsl}\r\n          size={size * (5 / 6)}\r\n          setColor={setColorFromWheel}\r\n        />\r\n        <div className=\"pickedColorContainer\">\r\n          <div\r\n            className=\"pickedColor\"\r\n            style={{\r\n              backgroundColor: pickedColor.hex,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"hexValue\"\r\n              style={{\r\n                fontSize: size / 12,\r\n                color: pickedColor.hsl.l > 70 ? 'black' : 'white',\r\n              }}\r\n            >\r\n              {pickedColor.hex}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  /** Size of the container in pixels (Container is a square). */\r\n  size: PropTypes.number,\r\n  /** Color to render onto color wheel. It can be hex(#ffffff) or rgb object({r:0, g:0, b:0}). */\r\n  initialColor: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.shape({ h: PropTypes.number, s: PropTypes.number, l: PropTypes.number }),\r\n    PropTypes.shape({ r: PropTypes.number, g: PropTypes.number, b: PropTypes.number }),\r\n  ]),\r\n  /** Function which will be called when color change occurs. Parameter is a hsl object */\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nColorPicker.defaultProps = {\r\n  size: 100,\r\n  initialColor: '#FF0000',\r\n  onChange: (() => {}),\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport ColorPicker from './ColorPicker';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  const [windowSize, setWindowSize] = useState(0);\r\n  const [color, setColor] = useState('#FFFFFF');\r\n\r\n  useEffect(() => {\r\n    const reCalculate = () => {\r\n      setWindowSize(Math.min(window.innerHeight, window.innerWidth));\r\n    };\r\n    reCalculate();\r\n    window.addEventListener('resize', reCalculate);\r\n    return () => {\r\n      window.removeEventListener('resize', reCalculate);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        margin: 0,\r\n        backgroundColor: color,\r\n      }}\r\n    >\r\n      <ColorPicker\r\n        size={windowSize / 2}\r\n        onChange={pickedColor => setColor(pickedColor.hex)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nrender(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}